#!/usr/bin/env python3

import os
import sys
from subprocess import DEVNULL, STDOUT, check_call, PIPE, Popen

SURFACE_DIR = os.path.dirname(os.path.realpath(__file__))
ROS_DIR = os.path.join(SURFACE_DIR, 'ros')

class bc:
    HEADER = '\033[95m'
    OKBLUE = '\033[94m'
    OKCYAN = '\033[96m'
    OKGREEN = '\033[92m'
    WARNING = '\033[93m'
    FAIL = '\033[91m'
    ENDC = '\033[0m'
    BOLD = '\033[1m'
    UNDERLINE = '\033[4m'

def printc(text, color):
    print('{}{}{}'.format(color, text, bc.ENDC))

def shell_source(script):
    pipe = Popen('{}; env'.format(script), stdout=PIPE, shell=True, encoding='utf8')
    output = pipe.communicate()[0]
    env = dict((line.split("=", 1) for line in output.splitlines()))
    os.environ.update(env)
    printc('[X] {}'.format('Sourced new files'), bc.OKGREEN)

def run(cmd):
    print('Running {}...'.format(cmd))  
    if check_call(cmd, stdout=DEVNULL, shell=True) != 0:
        printc('Something went wrong', bc.FAIL)
        sys.exit()

    printc('[X] {}'.format(cmd), bc.OKGREEN)

printc('Surface Launch', bc.OKBLUE)
printc('===========================', bc.BOLD)
print('Working in {}'.format(SURFACE_DIR))
printc('Building ROS workspace in {}'.format(ROS_DIR), bc.HEADER)
os.chdir(ROS_DIR)

buildRos = 'catkin_make'

run(buildRos)

shell_source('. {}'.format(os.path.join(ROS_DIR, 'devel/setup.sh')))

printc('Setting up frontend', bc.HEADER)
os.chdir(SURFACE_DIR)
print('Working in {}'.format(SURFACE_DIR))

run('npm install')
run('npm run build')
run('npm start')


