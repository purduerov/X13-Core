#!/usr/bin/env python3

import os
import sys
from subprocess import DEVNULL, STDOUT, check_call, PIPE, Popen
import socket

SURFACE_DIR = os.path.dirname(os.path.realpath(__file__))
ROS_DIR = os.path.join(SURFACE_DIR, 'ros')

class bc:
    HEADER = '\033[95m'
    OKBLUE = '\033[94m'
    OKCYAN = '\033[96m'
    OKGREEN = '\033[92m'
    WARNING = '\033[93m'
    FAIL = '\033[91m'
    ENDC = '\033[0m'
    BOLD = '\033[1m'
    UNDERLINE = '\033[4m'

def printc(text, color, same=False):
    if same:
        print('{}{}{}'.format(color, text, bc.ENDC), end='\r')
    else:
        print('{}{}{}'.format(color, text, bc.ENDC))

def shell_source(script):
    pipe = Popen('{}; env'.format(script), stdout=PIPE, shell=True, encoding='utf8')
    output = pipe.communicate()[0]
    env = dict((line.split("=", 1) for line in output.splitlines()))
    os.environ.update(env)
    printc('[X] {}'.format('Sourced new files'), bc.OKGREEN)

def run(cmd):
    printc('[-] {}'.format(cmd), bc.WARNING, True)
    if check_call(cmd, stdout=DEVNULL, stderr=DEVNULL, shell=True) != 0:
        printc('Something went wrong', bc.FAIL)
        sys.exit()

    printc('[X] {}'.format(cmd), bc.OKGREEN)

def develop():
    printc('Surface Launch', bc.OKBLUE)
    printc('===========================', bc.BOLD)
    print('Working in {}'.format(ROS_DIR))
    printc('Building ROS workspace in {}'.format(ROS_DIR), bc.HEADER)
    os.chdir(ROS_DIR)

    buildRos = 'catkin_make'

    run(buildRos)

    shell_source('. {}'.format(os.path.join(ROS_DIR, 'devel/setup.sh')))
    shell_source('. {}'.format(os.path.abspath('{}/../ros/compros.sh'.format(SURFACE_DIR))))

    print('Starting webpack watch')
    procs = [Popen('npm run build-watch', shell=True), Popen('npm run start-watch', shell=True)]
    for p in procs:
        p.wait()

def main():
    printc('Surface Launch', bc.OKBLUE)
    printc('===========================', bc.BOLD)
    print('Working in {}'.format(ROS_DIR))
    printc('Building ROS workspace in {}'.format(ROS_DIR), bc.HEADER)
    os.chdir(ROS_DIR)

    buildRos = 'catkin_make'

    run(buildRos)

    shell_source('. {}'.format(os.path.join(ROS_DIR, 'devel/setup.sh')))
    shell_source('. {}'.format(os.path.abspath('{}/../ros/compros.sh'.format(SURFACE_DIR))))
    s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
    s.connect(('10.255.255.255', 1))
    ip = s.getsockname()[0]
    s.close()

    os.environ.update({'ROS_IP': ip, 'ROS_HOSTNAME': ip})
    printc('IP set to {}'.format(ip), bc.UNDERLINE)

    printc('Setting up frontend', bc.HEADER)
    os.chdir(SURFACE_DIR)
    print('Working in {}'.format(SURFACE_DIR))

    #run('npm install')
    run('npm run build')
    run('npm start')

if __name__ == "__main__":
    if len(sys.argv) > 1 and sys.argv[1] == 'dev':
        develop()
    else:
        main()
